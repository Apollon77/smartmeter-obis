"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectPackageManager = exports.packageManagers = void 0;
const npm_1 = require("./package-managers/npm");
const yarn_berry_1 = require("./package-managers/yarn-berry");
const yarn_classic_1 = require("./package-managers/yarn-classic");
exports.packageManagers = Object.freeze({
    yarn: yarn_berry_1.YarnBerry,
    yarnClassic: yarn_classic_1.YarnClassic,
    npm: npm_1.Npm,
});
async function detectPackageManager({ cwd = process.cwd(), setCwdToPackageRoot = false, requireLockfile = true, } = {}) {
    for (const factory of Object.values(exports.packageManagers)) {
        const pm = new factory();
        pm.cwd = cwd;
        if (await pm.detect(true, setCwdToPackageRoot))
            return pm;
    }
    if (!requireLockfile) {
        for (const factory of Object.values(exports.packageManagers)) {
            const pm = new factory();
            pm.cwd = cwd;
            if (await pm.detect(false, setCwdToPackageRoot))
                return pm;
        }
    }
    throw new Error("This directory tree does not contain a package.json");
}
exports.detectPackageManager = detectPackageManager;
//# sourceMappingURL=pak.js.map