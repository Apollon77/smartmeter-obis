import { CommandResult, InstallOptions, PackageManager, UninstallOptions, UpdateOptions } from "../package-manager";
export declare class YarnBerry extends PackageManager {
    /** Executes a "raw" yarn command */
    private command;
    private fail;
    /**
     * Installs the given packages using `yarn add`. If no packages are given, `yarn install` is executed in the cwd.
     */
    install(packages?: string[], options?: InstallOptions): Promise<CommandResult>;
    uninstall(packages: string[], options?: UninstallOptions): Promise<CommandResult>;
    update(packages?: string[], options?: UpdateOptions): Promise<CommandResult>;
    rebuild(packages?: string[]): Promise<CommandResult>;
    detect(requireLockfile?: boolean, setCwdToPackageRoot?: boolean): Promise<boolean>;
    version(): Promise<string>;
    overrideDependencies(dependencies: Record<string, string>): Promise<CommandResult>;
}
